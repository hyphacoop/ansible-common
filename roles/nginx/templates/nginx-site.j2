{% if ( (nginx_sites.value.ssl_redirect is not defined or nginx_sites.value.ssl_redirect == true)
        and nginx_sites.value.ssl_provider is defined ) %}
server {
  listen 80;
  listen [::]:80;
  location / {
    return 301 https://$host$request_uri;
  }
  root /var/www/html;
}
{% endif %}

server {

{% if nginx_sites.value.ssl_provider is defined %}
  listen 0.0.0.0:443 ssl http2;
  listen [::]:443 ssl http2;
{% else %}
  listen  [::]:80;
  listen  0.0.0.0:80;
{% endif %}

  server_name {{nginx_sites.value.web_hostname}};

{% if nginx_sites.value.ssl_provider is defined %}
  
  ##########
  # Source for SSL configuration:
  # https://ssl-config.mozilla.org/#server=nginx&version=1.18.0&config=intermediate&openssl=1.1.1n&guideline=5.6
  # Copied from there and changed to have real file paths
  ##########
  
  ssl_certificate     /etc/letsencrypt/live/{{nginx_sites.value.web_hostname}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{nginx_sites.value.web_hostname}}/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
  ssl_session_tickets off;

  # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
  ssl_dhparam /etc/ssl/dhparam.pem;

  # intermediate configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  add_header Strict-Transport-Security "max-age=63072000" always;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  # verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/letsencrypt/live/{{nginx_sites.value.web_hostname}}/fullchain.pem;

  # replace with the IP address of your resolver
  resolver 1.1.1.1;

  ##########
  # End of copied SSL configuration
  ##########

{% endif %}

  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options DENY;
  keepalive_timeout 60;

{% for path, location in nginx_sites.value.locations.items() %}
  location {{ path }} {


{% if location.local_location is defined %}
    root  {{location.local_location}};
{% endif %}
{% if location.proxy_location is defined %}
    proxy_pass         {{location.proxy_location}};
    proxy_redirect     off;
{% if location.proxy_set_header_host is defined %}
    proxy_set_header   Host             {{location.proxy_set_header_host}};
{% else %}
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
{% endif %}
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_max_temp_file_size 0;
    proxy_buffering    off;
    proxy_read_timeout 1200;
    proxy_set_header X-Forwarded-Proto $scheme;

{% if nginx_sites.value.ssl_provider is defined %}
    proxy_cookie_path {{ path }} "/; SameSite=None; HTTPOnly; Secure";
{% endif %}

{% endif %}
{% if location.cors | default (false) == True %}
    add_header Access-Control-Allow-Origin *;
{% endif %}
    client_max_body_size       8192M;
{% if location.proxy_websocket | default (false) == True %}
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
{% endif %}
{% if location.basic_auth_file is defined %}
    auth_basic "{{ location.basic_auth_description | default("Login") }}";
    auth_basic_user_file "{{  location.basic_auth_file }}";
{% endif %}
  }
{% endfor %}
}
